@page "/Registrar"
@using Data.Models
@using Newtonsoft.Json

<div class="row">
<div class="col-xl-6 pr-4">
<div class="main">
  <div class="texto">
    <h2>Registrar</h2>
    <p>Busque su cedula en el sistema, si no aparece inserte sus datos.</p>
  </div>
  <div class="d-flex align-items-center text-white">
<h5>Cedula:</h5>
    <input type="text" @bind-value="cedula">
    <button class="btn btn-primary" @onclick="buscar">Buscar</button>
    <button class="btn btn-primary" @onclick="limpiar">limpiar</button>
  </div>
<div class="row">
  <div class="col-6 d-flex align-items-center justify-content-between px-2">
<h5>Nombre: </h5>
<input type="text" disabled @bind-value="firstname"/>
  </div>
    <div class="col-6 d-flex align-items-center justify-content-between px-2">
<h5>Apellido: </h5>
<input type="text" disabled @bind-value="lastname"/>
  </div>
    <div class="col-6 d-flex align-items-center justify-content-between px-2">
<h5>Telefono: </h5>
<input type="text" @bind-value="phone"/>
  </div>
    <div class="col-6 d-flex align-items-center justify-content-between px-2">
<h5>Nacimiento: </h5>
<input type="text" disabled @bind-value="birthday"/>
  </div>
    <div class="col-6 d-flex align-items-center justify-content-between px-2">
<h5>Provincia: </h5>
        <select name="provincia">
          @foreach (Provinces prov in provinces)
          {
              <option>@prov.Name</option>
          }
        </select>
  </div>
    <div class="col-6 d-flex align-items-center justify-content-between px-2">
<h5>Vacuna: </h5>
        <select name="vacunas">
          @foreach (Vaccines vac in vaccines)
          {
              <option>@vac.Name</option>
          }
        </select>
  </div>
    <div class="col-6 d-flex align-items-center justify-content-between px-2">
    <div class="text-white">Dosis No. @if (lastDosis)
    {
        <span>2</span>
    }else{
     <span>1</span> 
    }</div>
</div>



    <button class="btn btn-primary" @onclick="guardar">Guardar</button>

 


</div>
</div>
</div>
<div class="col-xl-6">
      <RadzenGoogleMap style="height: 600px;" Zoom="9" Center="@(new GoogleMapPosition(){Lat = 18.99717148716791,Lng=-69.85096824795758})" MapClick="@OnMapClick">
        <Markers>
            @if (position != null)
            {
               <RadzenGoogleMapMarker Title="Rep. Dom." Position="@(new GoogleMapPosition(){Lat = position.latitude,Lng=position.longitude})" />
            }
        </Markers>
    </RadzenGoogleMap>
</div>
</div>

@code{
  
  Position position = null;
    int zoom = 9;
  string firstname = "";

  string lastname = "";

  string phone = "";

  string birthday = "";

  bool lastDosis = false;



  List<Vaccines> vaccines = new vaccineContext().Vaccines.ToList();
    List<Provinces> provinces = new vaccineContext().Provinces.ToList();

     int selectedProvince =  new vaccineContext().Provinces.First().Id; 
     int selectedVaccine =  new vaccineContext().Vaccines.First().Id; 

  DateTime vac_date;


  //related with the cedula

  private String cedula = "";
  private bool valid = true;
  private String errorMessage = "";
  private String loadState = "none";
  private CedulaJson cedulaJson = new CedulaJson(){
    Nombres = "",
    Apellido1 = ""
  };
  private int what = 0;

  HttpClient client = new HttpClient();
    void OnMapClick(GoogleMapClickEventArgs args)
    {
        position = new Position(){latitude=args.Position.Lat,longitude=args.Position.Lng};
    }
  async void buscar()

  {
    vaccineContext context = new vaccineContext();

        var response = client.GetAsync("https://api.adamix.net/apec/cedula/" + cedula).Result;

        if (response.IsSuccessStatusCode)

        {

          var customerJsonString = await response.Content.ReadAsStringAsync();

          var deserialized = JsonConvert.DeserializeObject<CedulaJson>(custome‌​rJsonString);

          cedulaJson = deserialized;

          
          firstname = cedulaJson.Nombres;
          lastname = cedulaJson.Apellido1 + " " + cedulaJson.Apellido2;
          birthday = cedulaJson.FechaNacimiento.Date.ToString();

          if(context.Citizens.Where(c=>c.IdNumber == cedula).Count() > 0){
              lastDosis = true;

              Citizens cit = context.Citizens.Where(c=>c.IdNumber == cedula).FirstOrDefault();

              phone = cit.Phone;
              Records re = context.Records.Where(r=>r.Citizen == cit.Id).FirstOrDefault();
              selectedProvince = re.Province;
              selectedVaccine = re.Vaccine;
              position = new Position(){latitude=(double)re.Latitude,longitude=(double)re.Longitude};

          }

          loadState = "done";

        }

  }

  void limpiar()
  {

  }

  async void guardar()
  {
      vaccineContext context = new vaccineContext();

      if(context.Citizens.Where(c=>c.IdNumber == cedula).Count() > 0){
        //existe un usuario asi
        lastDosis= true;


      }else{
        //no existe, agregalo
        context.Citizens.Add(new Citizens(){
            FirstName = cedulaJson.Nombres,
            LastName = cedulaJson.Apellido1 + " "  + cedulaJson.Apellido2,
            Phone = phone,
            BirthDate = cedulaJson.FechaNacimiento,
            IdNumber = cedula,          
          });
          var result = await context.SaveChangesAsync();

      }

      if(lastDosis){
        //this is the last one
        Records rec = context.Records.Where(r=>context.Citizens.Where(c=>c.Id == r.Citizen).Any()).FirstOrDefault();

        rec.LastVacDate = DateTime.Now;

        context.Records.Update(rec);
        var u = await context.SaveChangesAsync();
        
      }else{
        //this is the first one
              context.Records.Add(new Records(){
        Citizen = context.Citizens.Where(c=>c.IdNumber == cedula).SingleOrDefault().Id,
        Province = selectedProvince,
        Vaccine = selectedVaccine,
        FirstVacDate = DateTime.Now,
        LastVacDate = null,
        Latitude=(decimal) position.latitude,
        Longitude=(decimal)position.longitude
      });
      }




      Vaccines upt = context.Vaccines.Where(v=>v.Id == selectedVaccine).FirstOrDefault();

      upt.Amounted = upt.Amounted - 1;

      context.Vaccines.Update(upt);

      var res = await context.SaveChangesAsync();
      System.Console.WriteLine("hecho");    
  }

}