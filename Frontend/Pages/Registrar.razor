@page "/Registrar"
@using Data.Models
@using Newtonsoft.Json

<div class="main">
  <div class="texto">
    <h2>Registrar</h2>
    <p>Busque su cedula en el sistema, si no aparece inserte sus datos.</p>
  </div>

  <nav class="search">
    <div class="texto-2">
      <h5>Cedula:</h5>
    </div>


    <input type="text" @bind-value="cedula">
    <button class="btn btn-primary" @onclick="buscar">Buscar</button>
    <button class="btn btn-primary" @onclick="limpiar">limpiar</button>

  </nav>

  <div class="registro">
    <ul class="lista1">

      <li class="list">
        <h5>Nombre: </h5>
      </li>
      <li class="list"><input type="text" disabled @bind-value="firstname"></li>
      <li class="list">
        <h5>Apellido: </h5>
      </li>
      <li class="list"><input type="text" disabled @bind-value="lastname"></li>
      <li class="list">
        <h5>Telefono: </h5>
      </li>
      <li class="list"><input type="text" @bind-value="phone"></li>

    </ul>
    <ul class="lista1">


      <li class="list">
        <h5>Nacimiento: </h5>
      </li>
      <li class="list">
        <input type="text" @bind-value="birthday"></li>
      <li class="list">
        <h5>Provincia: </h5>
      </li>
      <li class="list">

        <select name="provincia">
          @foreach (Provinces prov in provinces)
          {
              <option>@prov.Name</option>
          }
        </select>

      </li>

    </ul>
    <ul class="lista1">
      <li class="list">
        <h5>Vacuna:</h5>
      </li>
      <li class="list">
        <select name="vacunas">
          @foreach (Vaccines vac in vaccines)
          {
              <option>@vac.Name</option>
          }
        </select>

      </li>
    </ul>

    <div class="text-white">Dosis No. @if (lastDosis)
    {
        <span>2</span>
    }else{
     <span>1</span> 
    }</div>


    <div class="save"> <button class="btn btn-primary" @onclick="guardar">Guardar</button></div>

  </div>


</div>

@code{
  

  string firstname = "";

  string lastname = "";

  string phone = "";

  string birthday = "";

  bool lastDosis = false;



  List<Vaccines> vaccines = new vaccineContext().Vaccines.ToList();
    List<Provinces> provinces = new vaccineContext().Provinces.ToList();

     int selectedProvince =  new vaccineContext().Provinces.First().Id; 
     int selectedVaccine =  new vaccineContext().Vaccines.First().Id; 

  DateTime vac_date;


  //related with the cedula

  private String cedula = "";
  private bool valid = true;
  private String errorMessage = "";
  private String loadState = "none";
  private CedulaJson cedulaJson = new CedulaJson(){
    Nombres = "",
    Apellido1 = ""
  };
  private int what = 0;

  HttpClient client = new HttpClient();


  async void buscar()

  {
    vaccineContext context = new vaccineContext();

        var response = client.GetAsync("https://api.adamix.net/apec/cedula/" + cedula).Result;

        if (response.IsSuccessStatusCode)

        {

          var customerJsonString = await response.Content.ReadAsStringAsync();

          var deserialized = JsonConvert.DeserializeObject<CedulaJson>(custome‌​rJsonString);

          cedulaJson = deserialized;

          
          firstname = cedulaJson.Nombres;
          lastname = cedulaJson.Apellido1 + " " + cedulaJson.Apellido2;
          birthday = cedulaJson.FechaNacimiento.Date.ToString();

          if(context.Citizens.Where(c=>c.IdNumber == cedula).Count() > 0){
              lastDosis = true;

              Citizens cit = context.Citizens.Where(c=>c.IdNumber == cedula).FirstOrDefault();

              phone = cit.Phone;
              selectedProvince = context.Records.Where(r=>r.Citizen == cit.Id).FirstOrDefault().Province;
              selectedVaccine = context.Records.Where(r=>r.Citizen == cit.Id).FirstOrDefault().Vaccine;

          }

          loadState = "done";

        }

  }

  void limpiar()
  {

  }

  async void guardar()
  {
      vaccineContext context = new vaccineContext();

      if(context.Citizens.Where(c=>c.IdNumber == cedula).Count() > 0){
        //existe un usuario asi
        lastDosis= true;


      }else{
        //no existe, agregalo
        context.Citizens.Add(new Citizens(){
            FirstName = cedulaJson.Nombres,
            LastName = cedulaJson.Apellido1 + " "  + cedulaJson.Apellido2,
            Phone = phone,
            BirthDate = cedulaJson.FechaNacimiento,
            IdNumber = cedula
          });
          var result = await context.SaveChangesAsync();

      }

      if(lastDosis){
        //this is the last one
        Records rec = context.Records.Where(r=>context.Citizens.Where(c=>c.Id == r.Citizen).Any()).FirstOrDefault();

        rec.LastVacDate = DateTime.Now;

        context.Records.Update(rec);
        var u = await context.SaveChangesAsync();
        
      }else{
        //this is the first one
              context.Records.Add(new Records(){
        Citizen = context.Citizens.Where(c=>c.IdNumber == cedula).SingleOrDefault().Id,
        Province = selectedProvince,
        Vaccine = selectedVaccine,
        FirstVacDate = DateTime.Now,
        LastVacDate = null
      });
      }




      Vaccines upt = context.Vaccines.Where(v=>v.Id == selectedVaccine).FirstOrDefault();

      upt.Amounted = upt.Amounted - 1;

      context.Vaccines.Update(upt);

      var res = await context.SaveChangesAsync();
      System.Console.WriteLine("hecho");    
  }

}